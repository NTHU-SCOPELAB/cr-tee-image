name: Build packer vm

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-source:
    runs-on: ubuntu-22.04
    name: Build optee source code
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup optee
        run: |
          curl -L https://storage.googleapis.com/git-repo-downloads/repo > ~/repo
          sudo mv ~/repo /bin/repo
          sudo chmod a+x /bin/repo
          git config --global user.name 'SCOPELAB'
          git config --global user.email 'whoami@scope.lab'
          sudo apt-get update -y
          sudo apt-get install -y \
            adb \
            acpica-tools \
            autoconf \
            automake \
            bc \
            bison \
            build-essential \
            ccache \
            cpio \
            cscope \
            curl \
            device-tree-compiler \
            e2tools \
            expect \
            fastboot \
            flex \
            ftp-upload \
            gdisk \
            git \
            libattr1-dev \
            libcap-ng-dev \
            libfdt-dev \
            libftdi-dev \
            libglib2.0-dev \
            libgmp3-dev \
            libhidapi-dev \
            libmpc-dev \
            libncurses5-dev \
            libpixman-1-dev \
            libslirp-dev \
            libssl-dev \
            libtool \
            libusb-1.0-0-dev \
            make \
            mtools \
            netcat-openbsd \
            ninja-build \
            python3-cryptography \
            python3-pip \
            python3-pyelftools \
            python3-serial \
            python3-tomli \
            python-is-python3 \
            rsync \
            swig \
            unzip \
            uuid-dev \
            wget \
            xdg-utils \
            xsltproc \
            xterm \
            xz-utils \
            zlib1g-dev \
            libgnutls28-dev

      - name: Clone optee source code and build
        run: |
          mkdir -p ~/optee
          cd ~/optee
          repo init -u https://github.com/NTHU-SCOPELAB/manifest.git -m qemu_v8.xml
          repo sync -j8
          rm -rf optee_examples/aes

      - name: build optee toolchain
        run: |
          cd ~/optee/build
          make -j4 toolchains

      - name: build optee
        run: |
          cd ~/optee/build
          make -j4

      - name: Upload built optee binary
        uses: actions/upload-artifact@v4
        with:
          name: optee_binary
          include-hidden-files: true
          path: ~/optee
          compression-level: 9


  packer:
    runs-on: ubuntu-latest
    needs: build-source
    name: Run Packer
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download built optee binary
        uses: actions/download-artifact@v4
        with:
          name: optee_binary
          path: ./build-image/cloud-init

      - name: Check the downloaded artifact
        run: |
          ls -la ./build-image/cloud-init

      - name: Install VirtualBox and Dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y virtualbox virtualbox-guest-additions-iso

      - name: Setup `packer`
        uses: hashicorp/setup-packer@main
        id: setup
        with:
          version: latest

      - name: Run `packer init`
        working-directory: ./build-image
        id: init
        run: packer init .

      - name: Run `packer validate`
        working-directory: ./build-image
        id: validate
        run: packer validate .

      - name: Build packer image
        working-directory: ./build-image
        run: |
          packer build -only=virtualbox-iso.practice-vm .

      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Split the vm file in to chunks of 2G before uploading
        working-directory: ./build-image/build
        run: |
          zip -s 1g -r -0 practice-vm.zip practice-vm.ova

      - name: Create a new release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.tag_version.outputs.new_tag }}
          make_latest: true
          generate_release_notes: true
          fail_on_unmatched_files: false
          prerelease: false
          files: |
            build-image/build/practice-vm.z*
